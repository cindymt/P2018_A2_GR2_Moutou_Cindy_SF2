<?php

namespace AppBundle\Entity;

use Doctrine\ORM\AbstractQuery;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr as Expr;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
      public function findCatchThemAll($id = null)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->select('a, c, t, u')
            ->leftJoin('a.category','c', Expr\Join::WITH)
            ->leftJoin('a.tag','t', Expr\Join::WITH)
            ->leftJoin('a.user','u', Expr\Join::WITH)
            ->orderBy('a.id', 'DESC')
        ;
        if($id != null){
            $qb->where('a.id = :id')
                ->setParameters([
                    ':id' => $id,
                ])
            ;
        }
        return null === $id
            ? $qb->getQuery()->getArrayResult()
            : $qb->getQuery()->getSingleResult(AbstractQuery::HYDRATE_ARRAY);
    }
    public function findbyTag($id){
        $qb = $this->createQueryBuilder('a');
        $qb->select('a, t, c, u')
            ->leftJoin('a.tag','t', Expr\Join::WITH)
            ->leftJoin('a.category','c', Expr\Join::WITH)
            ->leftJoin('a.user','u', Expr\Join::WITH)
            ->where($qb->expr()->eq('t.id', $id))
        ;
        return $qb->getQuery()->getArrayResult();
    }

}
